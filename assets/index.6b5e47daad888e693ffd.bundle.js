(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["index"],{

/***/ "./index.ts":
/*!******************!*\
  !*** ./index.ts ***!
  \******************/
/*! no static exports found */
/***/ (function(module, exports) {

var scrollContainer = document.querySelector('.scrollContainer');
function getMaxAreaContainer(stickyElement) {
    var loopParent = stickyElement.parentNode;
    while (true) {
        if (loopParent.classList.contains('maxAreaContainer')) {
            return loopParent;
        }
        else {
            loopParent = loopParent.parentNode;
        }
    }
}
var cacheToolbarTranslateY = 0;
var cacheHeaderTranslateY = 0;
var cacheFooterTranslateY = 0;
scrollContainer.addEventListener('scroll', function () {
    var toolbar = document.querySelector('.toolbar');
    var header = document.querySelector('.header');
    var footer = document.querySelector('.footer');
    var toolbarScrollContainer = document.querySelector('.scrollContainer');
    var toolbarMaxAreaContainer = getMaxAreaContainer(toolbar);
    var toolbarScrollContainerRect = toolbarScrollContainer.getBoundingClientRect();
    var toobarRect = toolbar.getBoundingClientRect();
    var toolbarMaxAreaContainerRect = toolbarMaxAreaContainer.getBoundingClientRect();
    var toolbarStickPoint = toolbarScrollContainerRect.top + toolbarScrollContainer.clientTop;
    var originalToolbarRectTop = toobarRect.top - cacheToolbarTranslateY;
    if (originalToolbarRectTop < toolbarStickPoint) {
        cacheToolbarTranslateY = Math.abs(originalToolbarRectTop - toolbarStickPoint);
        toolbar.style.transform = "translateY(" + cacheToolbarTranslateY + "px)";
    }
    else {
        cacheToolbarTranslateY = 0;
        toolbar.style.removeProperty('transform');
    }
    var headerScrollContainer = document.querySelector('.scrollContainer');
    var headerMaxAreaContainer = getMaxAreaContainer(header);
    var headerScrollContainerRect = headerScrollContainer.getBoundingClientRect();
    var headerRect = header.getBoundingClientRect();
    var headerMaxAreaContainerRect = headerMaxAreaContainer.getBoundingClientRect();
    var headerStickPoint = headerScrollContainerRect.top + headerScrollContainer.clientTop;
    headerStickPoint += toolbar.offsetHeight;
    var headerMaxAreaContainerBorderBottom = parseFloat(window.getComputedStyle(headerMaxAreaContainer).borderBottomWidth);
    var maxHeaderStickPoint = headerMaxAreaContainerRect.bottom - headerMaxAreaContainerBorderBottom - header.offsetHeight; // todo maggin
    maxHeaderStickPoint -= footer.offsetHeight;
    headerStickPoint = Math.min(headerStickPoint, maxHeaderStickPoint);
    var originalHeaderRectTop = headerRect.top - cacheHeaderTranslateY;
    if (originalHeaderRectTop < headerStickPoint) {
        cacheHeaderTranslateY = Math.abs(originalHeaderRectTop - headerStickPoint);
        header.style.transform = "translateY(" + cacheHeaderTranslateY + "px)";
    }
    else {
        cacheHeaderTranslateY = 0;
        header.style.removeProperty('transform');
    }
    // const footerScrollContainer = document.querySelector('.scrollContainer');
    // const footerMaxAreaContainer = getMaxAreaContainer(footer);
    // const footerScrollContainerRect = footerScrollContainer.getBoundingClientRect();
    // const footerRect = footer.getBoundingClientRect();
    // const footerMaxAreaContainerRect = footerMaxAreaContainer.getBoundingClientRect();
    // const footerScrollContainerBorderBottom = parseFloat(window.getComputedStyle(footerScrollContainer).borderBottomWidth);
    // let footerStickPoint = footerScrollContainerRect.bottom + footerScrollContainerBorderBottom;
    // const footerMaxAreaContainerBorderTop = footerMaxAreaContainer.clientTop;
    // let minFooterStickPoint = footerMaxAreaContainerRect.top + footerMaxAreaContainerBorderTop + footer.offsetHeight; // todo maggin
    // minFooterStickPoint += header.offsetHeight;
    // footerStickPoint = Math.max(footerStickPoint, minFooterStickPoint);
    // const originalFooterRectBottom = footerRect.bottom + Math.abs(cacheFooterTranslateY);
    // if (originalFooterRectBottom >= footerStickPoint) {
    //     cacheFooterTranslateY = -Math.abs(originalFooterRectBottom - footerStickPoint);
    //     footer.style.transform = `translateY(${cacheFooterTranslateY}px)`;
    // }
    // else {
    //     cacheFooterTranslateY = 0;
    //     footer.style.removeProperty('transform');
    // }
});


/***/ })

},[["./index.ts","runtime~index"]]]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,