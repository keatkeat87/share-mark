(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["index"],{

/***/ "./index.ts":
/*!******************!*\
  !*** ./index.ts ***!
  \******************/
/*! no static exports found */
/***/ (function(module, exports) {

var _this = this;
var scrollContainer = document.querySelector('.scrollContainer');
function getMaxAreaContainer(stickyElement) {
    var loopParent = stickyElement.parentNode;
    while (true) {
        if (loopParent.classList.contains('maxAreaContainer')) {
            return loopParent;
        }
        else {
            loopParent = loopParent.parentNode;
        }
    }
}
var cacheToolbarTranslateY = 0;
var cacheHeaderTranslateY = 0;
scrollContainer.addEventListener('scroll', function () {
    var toolbar = document.querySelector('.toolbar');
    var header = document.querySelector('.header');
    var footer = document.querySelector('.footer');
    var toolbarScrollContainer = document.querySelector('.scrollContainer');
    var toolbarMaxAreaContainer = getMaxAreaContainer(toolbar);
    var toolbarScrollContainerRect = toolbarScrollContainer.getBoundingClientRect();
    var toobarRect = toolbar.getBoundingClientRect();
    var toolbarMaxAreaContainerRect = toolbarMaxAreaContainer.getBoundingClientRect();
    var toolbarStickPoint = toolbarScrollContainerRect.top + toolbarScrollContainer.clientTop;
    var originalToolbarRectTop = toobarRect.top - cacheToolbarTranslateY;
    if (originalToolbarRectTop < toolbarStickPoint) {
        cacheToolbarTranslateY = Math.abs(originalToolbarRectTop - toolbarStickPoint);
        toolbar.style.transform = "translateY(" + cacheToolbarTranslateY + "px)";
    }
    else {
        toolbar.style.removeProperty('transform');
    }
    var headerScrollContainer = document.querySelector('.scrollContainer');
    var headerMaxAreaContainer = getMaxAreaContainer(header);
    var headerScrollContainerRect = headerScrollContainer.getBoundingClientRect();
    var headerRect = header.getBoundingClientRect();
    var headerMaxAreaContainerRect = headerMaxAreaContainer.getBoundingClientRect();
    var headerStickPoint = headerScrollContainerRect.top + headerScrollContainer.clientTop;
    headerStickPoint += toolbar.offsetHeight;
    var headerMaxAreaContainerBorderBottom = parseFloat(window.getComputedStyle(headerMaxAreaContainer).borderBottomWidth);
    var maxHeaderStickPoint = headerMaxAreaContainerRect.bottom - headerMaxAreaContainerBorderBottom - header.offsetHeight; // todo maggin
    headerStickPoint = Math.min(headerStickPoint, maxHeaderStickPoint);
    var originalHeaderRectTop = headerRect.top - cacheHeaderTranslateY;
    if (originalHeaderRectTop < headerStickPoint) {
        cacheHeaderTranslateY = Math.abs(originalHeaderRectTop - headerStickPoint);
        header.style.transform = "translateY(" + cacheHeaderTranslateY + "px)";
    }
    else {
        header.style.removeProperty('transform');
    }
    // const footer = document.querySelector<HTMLElement>('.footer');
    // const footerScrollContainer = document.querySelector('.scrollContainer');
    // const footerMaxAreaContainer = getMaxAreaContainer(footer);
    // const footerScrollContainerRect = footerScrollContainer.getBoundingClientRect();
    // const footerRect = footer.getBoundingClientRect();
    // const footerMaxAreaContainerRect = footerMaxAreaContainer.getBoundingClientRect();
    // let footerStickPoint = footerScrollContainerRect.top + footerScrollContainer.clientTop;
    // footerStickPoint += toolbar.offsetHeight;
    // const originalFooterRectTop = footerRect.top - cacheFooterTranslateY;
    // if (originalFooterRectTop < footerStickPoint) {
    //     cacheFooterTranslateY = Math.abs(originalFooterRectTop - footerStickPoint);
    //     footer.style.transform = `translateY(${cacheFooterTranslateY}px)`;
    // }
    // else {
    //     footer.style.removeProperty('transform');
    // }
    var totalPrevOrNextOffsetHeight = prevOrNextStickies.sum(function (s) { return s.hostElement.nativeElement.offsetHeight; });
    var containerBorderBottom = parseFloat(window.getComputedStyle(scrollContainer.hostElement.nativeElement).borderBottomWidth);
    var stickPoint = scrollContainerRect.bottom - containerBorderBottom;
    stickPoint -= totalPrevOrNextOffsetHeight;
    var originalStickyBottom = stickyRect.bottom + Math.abs(_this.cacheCurrentTransitionY);
    if (originalStickyBottom >= stickPoint) {
        _this.cacheCurrentTransitionY = -Math.abs(originalStickyBottom - stickPoint);
        if (config.simulation) {
            _this.hostElement.nativeElement.style.transform = "translateY(" + _this.cacheCurrentTransitionY + "px)";
        }
        else {
            _this.hostElement.nativeElement.style.bottom = totalPrevOrNextOffsetHeight + "px";
            _this.hostElement.nativeElement.style.position = 'sticky';
        }
    }
    else {
        _this.cacheCurrentTransitionY = 0;
        _this.hostElement.nativeElement.style.removeProperty(config.simulation ? 'transform' : 'bottom');
    }
});


/***/ })

},[["./index.ts","runtime~index"]]]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,